Traversing in circular singly linked list can be done through a loop. Circular singly linked list is a type of list in which the last node of the list has a pointer to the first node of the list .We stop traversal when we reach the first node (head) of the list again .While in simple linked list, we traverse the list from the head node and stop the traversal when we reach NULL.
• Condition: We traverse until the temp variable equals the head value. 0 Once it becomes false 
 
the traversal is finished.

CODE-
 public void traverser(){
        Node temp=head;
        if (head==null){
            System.out.println("LL does not exist.");
        }
        else{
            do{
                System.out.print(temp.data+" ");
                temp=temp.next;
            }
            while(temp!=head);
        }
    }